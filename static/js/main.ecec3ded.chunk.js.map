{"version":3,"sources":["components/navbar.js","components/header.js","components/CharacterCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["navbar","props","className","id","href","score","topScore","message","header","alignment","CharacterCard","src","this","image","alt","name","type","clicked","onClick","toggle","handleIncrement","Component","Wrapper","shuffleArray","characters","state","sort","Math","random","setState","console","log","charactersList","selectedCharacter","filter","character","reset","resetStatus","map","e","topScoreCheck","count","key","value","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecec3ded.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\" >\r\n            <div className=\"col-md-3\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\" id=\"title\">\r\n                        <a href=\"/\">Super Clicks</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\" id=\"result\" style={styles.result}><h2><strong>{props.message}</strong></h2></li> */}\r\n                    <li className=\"nav-item\" id=\"score\">Score: {props.score} | Top Score: {props.topScore}</li>\r\n                </ul>\r\n\r\n            </div>\r\n            <div className=\"col-md-6 text-center\" id=\"result\"><h2><strong>{props.message}</strong></h2></div>\r\n        </nav>\r\n    );\r\n  }\r\n  \r\n  export default navbar;","import React from \"react\";\r\n\r\nfunction header(props){\r\n    return (\r\n        <div className={props.alignment}>\r\n            <h1>Clicky Game!</h1>\r\n            <h2>Click on an image to earn points, but don't click on any more than once!</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n\nclass CharacterCard extends Component {\n \n\n render(){\n   return (\n     \n       <div className=\"img-container\" >\n         <img src={this.props.image} alt={this.props.name} className={this.props.type} id={this.props.id} clicked={this.props.clicked} onClick={()=> {this.props.toggle(this.props.id); this.props.handleIncrement(this.props.name)}} />\n       </div>\n    \n       \n     );\n\n }\n\n     \n}\n\nexport default CharacterCard;\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Navbar from \"../navbar\";\r\nimport Header from \"../header\";\r\nimport CharacterCard from \"../CharacterCard\";\r\nimport characters from \"../../characters.json\"\r\n\r\n\r\nclass Wrapper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      topScore: 0,\r\n      count: 0,\r\n      characters,\r\n      message:\"\",\r\n    }\r\n  }\r\n    \r\n  componentDidMount() {\r\n    this.shuffleArray();\r\n  }\r\n\r\n  shuffleArray = () => {\r\n    \r\n    const characters = this.state.characters.sort(() => Math.random() - 0.5);\r\n    this.setState({ characters });\r\n  };\r\n\r\n  toggle = (id) => {\r\n    console.log(\"Key passed: \", id);\r\n    let charactersList = [...this.state.characters];\r\n    console.log(\"charactersList: \", charactersList);\r\n    const selectedCharacter = charactersList.filter(character => {\r\n      let newCharacter = character.id === id;\r\n      return newCharacter;\r\n    })\r\n    console.log(\"selectedCharacter: \", selectedCharacter);\r\n    console.log(\"selectedCharacter Status: \", selectedCharacter[0].clicked)\r\n    if (selectedCharacter[0].clicked === false){\r\n      let newPrompt = \"Excellent Pick !\" \r\n      this.setState({ message: newPrompt});\r\n\r\n      selectedCharacter[0].clicked = true;\r\n      // this.setState({ characters: this.state.characters.clicked === selectedCharacter[0].clicked})\r\n      console.log(\"toggled to \", selectedCharacter[0].clicked)\r\n    }\r\n    else {\r\n      console.log(\"Already toggled to true!\");\r\n      let newPrompt = \" You Lose ! \";\r\n      this.setState({ message: newPrompt,\r\n       \r\n      });\r\n     \r\n      this.reset()\r\n    }\r\n  }\r\n\r\n\r\n  handleIncrement = (name) => {\r\n      // We always use the setState method to update a component's state\r\n     this.setState({ score: this.state.score + 1 });\r\n\r\n    if (this.state.score >= this.state.topScore){\r\n      this.setState({ topScore: this.state.score + 1})\r\n    }\r\n\r\n    this.shuffleArray();\r\n  };\r\n\r\n  reset = () => {\r\n      const initialScore = -1;\r\n      this.setState({ score: this.state.score = initialScore });\r\n   \r\n    //use map to reset all to false.\r\n    let charactersList = [...this.state.characters];\r\n    console.log(\"List to reset: \", charactersList);\r\n    \r\n    const resetStatus = charactersList.map(e => ({ ...e, clicked: false }));\r\n    console.log(\"reset list:\", resetStatus);\r\n    \r\n    this.setState({ characters: this.state.characters = resetStatus})\r\n    this.shuffleArray();\r\n  }\r\n    \r\n\r\n  topScoreCheck = () => {\r\n    let currentScore = this.state.score;\r\n    let currentTopScore = this.state.topScore;\r\n    if (currentScore >= currentTopScore){\r\n      this.setState({ topScore: this.state.score})\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n       <Navbar message={this.state.message} score={this.state.score} topScore={this.state.topScore} />\r\n        <Header alignment=\"text-center\" />\r\n          <div className=\"container\">\r\n              \r\n                {this.state.characters.map(character => (\r\n                      <CharacterCard\r\n                        name={character.name}\r\n                        image={character.image}\r\n                        id={character.id}\r\n                        key={character.id}\r\n                        // type={\"img\"}\r\n                        clicked={character.clicked.value}\r\n                        toggle={this.toggle}\r\n                        handleIncrement={this.handleIncrement}\r\n\r\n                      />\r\n                    ))}\r\n             \r\n          </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\n\nimport Wrapper from \"./components/Wrapper\";\n\n// import characters from \"./characters.json\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n           <Wrapper/>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}